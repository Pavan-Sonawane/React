{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TGSUser183\\\\All Internship Data\\\\React\\\\CRUD JSON Server\\\\crud\\\\src\\\\Componanats\\\\ContactList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { getContacts, deleteContact, searchContacts } from '../services/contactService';\n// import TextField from '@mui/material/TextField';\n// import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import Grid from '@mui/material/Grid';\n// import IconButton from '@mui/material/IconButton';\n// import AddIcon from '@mui/icons-material/Add';\n// import EditIcon from '@mui/icons-material/Edit';\n// import Dialog from '@mui/material/Dialog';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import AddContactForm from '../Componanats/AddContact';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import Navbar from '../Componanats/NavBar';\n// const ContactList = () => {\n//   const [contacts, setContacts] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n//   const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n//   const [selectedContact, setSelectedContact] = useState(null);\n\n//   useEffect(() => {\n//     refreshContacts();\n//   }, []);\n\n//   const refreshContacts = async () => {\n//     const data = await getContacts();\n//     setContacts(data);\n//   };\n\n//   const handleDelete = async (id) => {\n//     await deleteContact(id);\n//     refreshContacts();\n//   };\n\n//   const handleSearch = async () => {\n//     const data = await searchContacts(searchQuery);\n//     setContacts(data);\n//   };\n\n//   const handleOpenAddModal = () => {\n//     setIsAddModalOpen(true);\n//     setSelectedContact(null);\n//   };\n\n//   const handleCloseAddModal = () => {\n//     setIsAddModalOpen(false);\n//   };\n\n//   const handleOpenEditModal = (contact) => {\n//     setSelectedContact(contact);\n//     setIsEditModalOpen(true);\n//   };\n\n//   const handleCloseEditModal = () => {\n//     setIsEditModalOpen(false);\n//     setSelectedContact(null);\n//   };\n\n//   return (\n//     <div>\n//       {/* <Typography variant=\"h2\" style={{ marginBottom: '20px', fontFamily: 'Arial' }}>\n//         Contact List\n//       </Typography>\n//       <div>\n//         <TextField\n//           type=\"text\"\n//           placeholder=\"Search\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//         <Button variant=\"contained\" onClick={handleSearch} style={{ marginLeft: '10px' }}>\n//           Search\n//         </Button>\n//         <Button variant=\"contained\" color=\"primary\" onClick={handleOpenAddModal} style={{ marginTop: '20px' }}>\n//         Add Contact\n//       </Button>\n//       </div> */}\n\n//       <Navbar\n//         searchQuery={searchQuery}\n//         setSearchQuery={setSearchQuery}\n//         handleSearch={handleSearch}\n//         handleOpenAddModal={handleOpenAddModal}\n//       />\n//       <Grid container spacing={2} style={{ marginTop: '20px' }}>\n//         {contacts.map((contact) => (\n//           <Grid item xs={12} sm={6} md={4} lg={3} key={contact.id}>\n//             <Card style={{ backgroundColor: '#f0f0f0', marginBottom: '10px' }}>\n//               <CardContent>\n//                 <Typography variant=\"h6\">\n//                   <strong>Name:</strong> {contact.name}\n//                 </Typography>\n//                 <Typography>\n//                   <strong>Email:</strong> {contact.email}\n//                 </Typography>\n//                 <Typography>\n//                   <strong>Address:</strong> {contact.address}\n//                 </Typography>\n//                 <Typography>\n//                   <strong>mobile Number:</strong> {contact.mobileNumber}\n//                 </Typography>\n//                 <Typography>\n//                   <strong>Country:</strong> {contact.country}\n//                 </Typography>\n//                 <IconButton color=\"primary\" aria-label=\"edit contact\" onClick={() => handleOpenEditModal(contact)}>\n//                   <EditIcon />\n//                 </IconButton>\n//                 <Button\n//                     variant=\"contained\"\n//                     onClick={() => handleDelete(contact.id)}\n//                     style={{ marginTop: '10px', backgroundColor: '#ff3d00', color: '#fff' }}\n//                     startIcon={<DeleteIcon />}\n//                     >\n//                     Delete\n//                     </Button>\n//               </CardContent>\n//             </Card>\n//           </Grid>\n//         ))}\n//       </Grid>\n\n//       {/* Add Contact Dialog */}\n//       <Dialog open={isAddModalOpen} onClose={handleCloseAddModal}>\n//         <DialogTitle>Add Contact</DialogTitle>\n//         <DialogContent>\n//           <AddContactForm handleClose={handleCloseAddModal} refreshContacts={refreshContacts} />\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Edit Contact Dialog */}\n//       <Dialog open={isEditModalOpen} onClose={handleCloseEditModal}>\n//         <DialogTitle>Edit Contact</DialogTitle>\n//         <DialogContent>\n//           <AddContactForm contact={selectedContact} handleClose={handleCloseEditModal} refreshContacts={refreshContacts} />\n//         </DialogContent>\n//       </Dialog>\n//     </div>\n//   );\n// };\n\n// export default ContactList;\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getContacts, deleteContact, searchContacts, uploadImage // Add this import\n} from '../services/contactService';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddContactForm from '../Componanats/AddContact';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Navbar from '../Componanats/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  useEffect(() => {\n    refreshContacts();\n  }, []);\n  const refreshContacts = async () => {\n    const data = await getContacts();\n    setContacts(data);\n  };\n  const handleDelete = async id => {\n    await deleteContact(id);\n    refreshContacts();\n  };\n  const handleSearch = async () => {\n    const data = await searchContacts(searchQuery);\n    setContacts(data);\n  };\n  const handleOpenAddModal = () => {\n    setIsAddModalOpen(true);\n    setSelectedContact(null);\n  };\n  const handleCloseAddModal = () => {\n    setIsAddModalOpen(false);\n  };\n  const handleOpenEditModal = contact => {\n    setSelectedContact(contact);\n    setIsEditModalOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setIsEditModalOpen(false);\n    setSelectedContact(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      handleSearch: handleSearch,\n      handleOpenAddModal: handleOpenAddModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: '20px'\n      },\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundColor: '#f0f0f0',\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), \" \", contact.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), \" \", contact.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), \" \", contact.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Mobile Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), \" \", contact.mobileNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Country:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), \" \", contact.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), contact.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: contact.image,\n              alt: \"Contact\",\n              style: {\n                width: '100%',\n                marginTop: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              \"aria-label\": \"edit contact\",\n              onClick: () => handleOpenEditModal(contact),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handleDelete(contact.id),\n              style: {\n                marginTop: '10px',\n                backgroundColor: '#ff3d00',\n                color: '#fff'\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 30\n              }, this),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddModalOpen,\n      onClose: handleCloseAddModal,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(AddContactForm, {\n          handleClose: handleCloseAddModal,\n          refreshContacts: refreshContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isEditModalOpen,\n      onClose: handleCloseEditModal,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(AddContactForm, {\n          contact: selectedContact,\n          handleClose: handleCloseEditModal,\n          refreshContacts: refreshContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"OlxsgvdCjv01ei38sePAt8GHJdQ=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useEffect","useState","Link","getContacts","deleteContact","searchContacts","uploadImage","TextField","Button","Typography","Card","CardContent","Grid","IconButton","AddIcon","EditIcon","Dialog","DialogContent","DialogTitle","AddContactForm","DeleteIcon","Navbar","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","searchQuery","setSearchQuery","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalOpen","selectedContact","setSelectedContact","refreshContacts","data","handleDelete","id","handleSearch","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","contact","handleCloseEditModal","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","style","marginTop","map","item","xs","sm","md","lg","backgroundColor","marginBottom","variant","name","email","address","mobileNumber","country","image","src","alt","width","color","onClick","startIcon","open","onClose","handleClose","_c","$RefreshReg$"],"sources":["C:/Users/TGSUser183/All Internship Data/React/CRUD JSON Server/crud/src/Componanats/ContactList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import { getContacts, deleteContact, searchContacts } from '../services/contactService';\r\n// import TextField from '@mui/material/TextField';\r\n// import Button from '@mui/material/Button';\r\n// import Typography from '@mui/material/Typography';\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import Grid from '@mui/material/Grid';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import AddIcon from '@mui/icons-material/Add';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n// import AddContactForm from '../Componanats/AddContact';\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n// import Navbar from '../Componanats/NavBar';\r\n// const ContactList = () => {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n//   const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n//   const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     refreshContacts();\r\n//   }, []);\r\n\r\n//   const refreshContacts = async () => {\r\n//     const data = await getContacts();\r\n//     setContacts(data);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     await deleteContact(id);\r\n//     refreshContacts();\r\n//   };\r\n\r\n//   const handleSearch = async () => {\r\n//     const data = await searchContacts(searchQuery);\r\n//     setContacts(data);\r\n//   };\r\n\r\n//   const handleOpenAddModal = () => {\r\n//     setIsAddModalOpen(true);\r\n//     setSelectedContact(null);\r\n//   };\r\n\r\n//   const handleCloseAddModal = () => {\r\n//     setIsAddModalOpen(false);\r\n//   };\r\n\r\n//   const handleOpenEditModal = (contact) => {\r\n//     setSelectedContact(contact);\r\n//     setIsEditModalOpen(true);\r\n//   };\r\n\r\n//   const handleCloseEditModal = () => {\r\n//     setIsEditModalOpen(false);\r\n//     setSelectedContact(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* <Typography variant=\"h2\" style={{ marginBottom: '20px', fontFamily: 'Arial' }}>\r\n//         Contact List\r\n//       </Typography>\r\n//       <div>\r\n//         <TextField\r\n//           type=\"text\"\r\n//           placeholder=\"Search\"\r\n//           value={searchQuery}\r\n//           onChange={(e) => setSearchQuery(e.target.value)}\r\n//         />\r\n//         <Button variant=\"contained\" onClick={handleSearch} style={{ marginLeft: '10px' }}>\r\n//           Search\r\n//         </Button>\r\n//         <Button variant=\"contained\" color=\"primary\" onClick={handleOpenAddModal} style={{ marginTop: '20px' }}>\r\n//         Add Contact\r\n//       </Button>\r\n//       </div> */}\r\n\r\n//       <Navbar\r\n//         searchQuery={searchQuery}\r\n//         setSearchQuery={setSearchQuery}\r\n//         handleSearch={handleSearch}\r\n//         handleOpenAddModal={handleOpenAddModal}\r\n//       />\r\n//       <Grid container spacing={2} style={{ marginTop: '20px' }}>\r\n//         {contacts.map((contact) => (\r\n//           <Grid item xs={12} sm={6} md={4} lg={3} key={contact.id}>\r\n//             <Card style={{ backgroundColor: '#f0f0f0', marginBottom: '10px' }}>\r\n//               <CardContent>\r\n//                 <Typography variant=\"h6\">\r\n//                   <strong>Name:</strong> {contact.name}\r\n//                 </Typography>\r\n//                 <Typography>\r\n//                   <strong>Email:</strong> {contact.email}\r\n//                 </Typography>\r\n//                 <Typography>\r\n//                   <strong>Address:</strong> {contact.address}\r\n//                 </Typography>\r\n//                 <Typography>\r\n//                   <strong>mobile Number:</strong> {contact.mobileNumber}\r\n//                 </Typography>\r\n//                 <Typography>\r\n//                   <strong>Country:</strong> {contact.country}\r\n//                 </Typography>\r\n//                 <IconButton color=\"primary\" aria-label=\"edit contact\" onClick={() => handleOpenEditModal(contact)}>\r\n//                   <EditIcon />\r\n//                 </IconButton>\r\n//                 <Button\r\n//                     variant=\"contained\"\r\n//                     onClick={() => handleDelete(contact.id)}\r\n//                     style={{ marginTop: '10px', backgroundColor: '#ff3d00', color: '#fff' }}\r\n//                     startIcon={<DeleteIcon />}\r\n//                     >\r\n//                     Delete\r\n//                     </Button>\r\n//               </CardContent>\r\n//             </Card>\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n      \r\n\r\n//       {/* Add Contact Dialog */}\r\n//       <Dialog open={isAddModalOpen} onClose={handleCloseAddModal}>\r\n//         <DialogTitle>Add Contact</DialogTitle>\r\n//         <DialogContent>\r\n//           <AddContactForm handleClose={handleCloseAddModal} refreshContacts={refreshContacts} />\r\n//         </DialogContent>\r\n//       </Dialog>\r\n\r\n//       {/* Edit Contact Dialog */}\r\n//       <Dialog open={isEditModalOpen} onClose={handleCloseEditModal}>\r\n//         <DialogTitle>Edit Contact</DialogTitle>\r\n//         <DialogContent>\r\n//           <AddContactForm contact={selectedContact} handleClose={handleCloseEditModal} refreshContacts={refreshContacts} />\r\n//         </DialogContent>\r\n//       </Dialog>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ContactList;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  getContacts,\r\n  deleteContact,\r\n  searchContacts,\r\n  uploadImage, // Add this import\r\n} from '../services/contactService';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AddContactForm from '../Componanats/AddContact';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Navbar from '../Componanats/NavBar';\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n\r\n  useEffect(() => {\r\n    refreshContacts();\r\n  }, []);\r\n\r\n  const refreshContacts = async () => {\r\n    const data = await getContacts();\r\n    setContacts(data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteContact(id);\r\n    refreshContacts();\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    const data = await searchContacts(searchQuery);\r\n    setContacts(data);\r\n  };\r\n\r\n  const handleOpenAddModal = () => {\r\n    setIsAddModalOpen(true);\r\n    setSelectedContact(null);\r\n  };\r\n\r\n  const handleCloseAddModal = () => {\r\n    setIsAddModalOpen(false);\r\n  };\r\n\r\n  const handleOpenEditModal = (contact) => {\r\n    setSelectedContact(contact);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setIsEditModalOpen(false);\r\n    setSelectedContact(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        handleSearch={handleSearch}\r\n        handleOpenAddModal={handleOpenAddModal}\r\n      />\r\n      <Grid container spacing={2} style={{ marginTop: '20px' }}>\r\n        {contacts.map((contact) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} key={contact.id}>\r\n            <Card style={{ backgroundColor: '#f0f0f0', marginBottom: '10px' }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">\r\n                  <strong>Name:</strong> {contact.name}\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Email:</strong> {contact.email}\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Address:</strong> {contact.address}\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Mobile Number:</strong> {contact.mobileNumber}\r\n                </Typography>\r\n                <Typography>\r\n                  <strong>Country:</strong> {contact.country}\r\n                </Typography>\r\n                {contact.image && (\r\n                  <img src={contact.image} alt=\"Contact\" style={{ width: '100%', marginTop: '10px' }} />\r\n                )}\r\n                <IconButton color=\"primary\" aria-label=\"edit contact\" onClick={() => handleOpenEditModal(contact)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => handleDelete(contact.id)}\r\n                  style={{ marginTop: '10px', backgroundColor: '#ff3d00', color: '#fff' }}\r\n                  startIcon={<DeleteIcon />}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Add Contact Dialog */}\r\n      <Dialog open={isAddModalOpen} onClose={handleCloseAddModal}>\r\n        <DialogTitle>Add Contact</DialogTitle>\r\n        <DialogContent>\r\n          <AddContactForm handleClose={handleCloseAddModal} refreshContacts={refreshContacts} />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Edit Contact Dialog */}\r\n      <Dialog open={isEditModalOpen} onClose={handleCloseEditModal}>\r\n        <DialogTitle>Edit Contact</DialogTitle>\r\n        <DialogContent>\r\n          <AddContactForm contact={selectedContact} handleClose={handleCloseEditModal} refreshContacts={refreshContacts} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,WAAW,CAAE;AAAA,OACR,4BAA4B;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,cAAc,MAAM,2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"},"metadata":{},"sourceType":"module","externalDependencies":[]}